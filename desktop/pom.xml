<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>corf</groupId>
        <artifactId>corf-parent</artifactId>
        <version>1.1.0</version>
    </parent>

    <artifactId>corf-desktop</artifactId>
    <description>Desktop application</description>

    <properties>
        <app.launcher>corf.desktop.Launcher</app.launcher>
        <app.module>corf.desktop</app.module>

        <!-- final artifact name -->
        <build.artifactName>${app.name}-${app.version}-${platform}-${os.arch}</build.artifactName>
        <!-- application dependencies that will be included as JAR files -->
        <build.dependenciesDir>${project.build.directory}${file.separator}dependencies</build.dependenciesDir>
        <!-- The list of JDK modules to be included to the runtime image. Beware of non-modularized dependencies!
             Use `grep -ohirP "requires (transitive )?\K((java|jdk).*)" target/moditect | sort | uniq`
             to find all required Java modules including the ones required by transitive dependencies.
        -->
        <build.jdkModules>java.base,java.desktop,java.logging,java.management,java.prefs,java.security.jgss,java.sql,java.xml,jdk.crypto.cryptoki,jdk.localedata</build.jdkModules>
        <!-- The list of JavaFX modules to be included to the runtime image. There is no need to include
             all JavaFX modules, since javafx.controls depends on javafx.base the latter will be included
             automatically.
        -->
        <build.jfxModules>javafx.controls,javafx.swing</build.jfxModules>
        <!-- application dependencies that will be bundled into runtime image -->
        <build.platformModulesDir>${project.build.directory}${file.separator}platform-modules</build.platformModulesDir>
        <!-- jpackage generated application image -->
        <build.package.appImageDir>${project.build.directory}${file.separator}app-image</build.package.appImageDir>
        <!-- jlink generated runtime image -->
        <build.package.runtimeImageDir>${project.build.directory}${file.separator}runtime-image</build.package.runtimeImageDir>
        <!-- contains package scripts after filtering and placeholder replacement -->
        <build.package.scriptsDir>${project.build.directory}${file.separator}package-scripts</build.package.scriptsDir>
        <!-- jpackage directory for temp artifacts -->
        <build.package.tempDir>${project.build.directory}${file.separator}package-temp</build.package.tempDir>
        <!-- final artifacts (zip, deb, rpm...) -->
        <build.releaseDir>${project.build.directory}${file.separator}release</build.releaseDir>
    </properties>

    <build>
        <resources>
            <!-- copy and filter application resources -->
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>corf/desktop/application.properties</include>
                </includes>
            </resource>
            <!-- copy icons -->
            <resource>
                <directory>icons</directory>
                <filtering>false</filtering>
                <targetPath>${project.build.directory}</targetPath>
            </resource>
            <!-- copy and filter build scripts -->
            <resource>
                <directory>src/package-scripts</directory>
                <filtering>true</filtering>
                <targetPath>${build.package.scriptsDir}</targetPath>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>us.hebi.sass</groupId>
                <artifactId>sass-cli-maven-plugin</artifactId>
                <configuration>
                    <args>
                        <arg>
                            ${project.basedir}/src/main/resources/corf/desktop/assets/styles/scss/index.scss:${project.build.directory}/classes/corf/desktop/assets/styles/index.css
                        </arg>
                        <arg>--no-source-map</arg>
                    </args>
                </configuration>
                <executions>
                    <execution>
                        <id>run-sass</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <configuration>
                    <mainClass>${app.launcher}</mainClass>
                    <executable>${java.home}/bin/java</executable>
                </configuration>
                <executions>
                    <execution>
                        <id>run</id>
                        <configuration>
                            <mainClass>${app.launcher}</mainClass>
                            <executable>${java.home}/bin/java</executable>
                        </configuration>
                    </execution>
                    <!--
                        To run application in debug mode:
                        - run `mvn javafx:run@debug` - it starts app and exposes port for remote debugging
                        - connect to the app via remote debugging using exactly the same agentlib option as below
                    -->
                    <execution>
                        <id>debug</id>
                        <configuration>
                            <options>
                                <option>-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=*:9090</option>
                            </options>
                            <mainClass>${app.launcher}</mainClass>
                            <executable>${java.home}/bin/java</executable>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <configuration>
                    <!-- skip installation to the local repository -->
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <!-- copy application JAR file to the dependencies -->
                <configuration>
                    <outputDirectory>${build.dependenciesDir}</outputDirectory>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <!-- copy all dependencies that WON'T be included into jlink runtime image -->
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${build.dependenciesDir}</outputDirectory>
                            <includeScope>runtime</includeScope>
                            <excludeGroupIds>org.openjfx</excludeGroupIds>
                        </configuration>
                    </execution>
                    <!-- copy platform dependencies that WILL be included into jlink runtime image -->
                    <execution>
                        <id>copy-openjfx</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${build.platformModulesDir}</outputDirectory>
                            <includeGroupIds>org.openjfx</includeGroupIds>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.moditect</groupId>
                <artifactId>moditect-maven-plugin</artifactId>
                <!-- inject module-info to non-modularized dependencies -->
                <executions>
                    <execution>
                        <id>add-module-info</id>
                        <phase>package</phase>
                        <goals>
                            <goal>add-module-info</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${build.dependenciesDir}</outputDirectory>
                            <overwriteExistingFiles>true</overwriteExistingFiles>
                            <jdepsExtraArgs>
                                <arg>--multi-release</arg>
                                <arg>9</arg>
                            </jdepsExtraArgs>
                            <modules>
                                <module>
                                    <artifact>
                                        <groupId>commons-codec</groupId>
                                        <artifactId>commons-codec</artifactId>
                                    </artifact>
                                    <moduleInfo>
                                        <name>org.apache.commons.codec</name>
                                        <exports>*;</exports>
                                    </moduleInfo>
                                </module>
                                <module>
                                    <artifact>
                                        <groupId>org.apache.commons</groupId>
                                        <artifactId>commons-collections4</artifactId>
                                    </artifact>
                                    <moduleInfo>
                                        <name>org.apache.commons.collections4</name>
                                        <exports>*;</exports>
                                    </moduleInfo>
                                </module>
                                <module>
                                    <artifact>
                                        <groupId>org.apache.commons</groupId>
                                        <artifactId>commons-csv</artifactId>
                                    </artifact>
                                    <moduleInfo>
                                        <name>commons.csv</name>
                                        <exports>*;</exports>
                                    </moduleInfo>
                                </module>
                                <module>
                                    <artifact>
                                        <groupId>commons-dbutils</groupId>
                                        <artifactId>commons-dbutils</artifactId>
                                    </artifact>
                                    <moduleInfo>
                                        <name>commons.dbutils</name>
                                        <exports>*;</exports>
                                    </moduleInfo>
                                </module>
                                <module>
                                    <artifact>
                                        <groupId>commons-io</groupId>
                                        <artifactId>commons-io</artifactId>
                                    </artifact>
                                    <moduleInfo>
                                        <name>org.apache.commons.io</name>
                                        <exports>*;</exports>
                                    </moduleInfo>
                                </module>
                                <module>
                                    <artifact>
                                        <groupId>org.apache.commons</groupId>
                                        <artifactId>commons-lang3</artifactId>
                                    </artifact>
                                    <moduleInfo>
                                        <name>org.apache.commons.lang3</name>
                                        <exports>*;</exports>
                                    </moduleInfo>
                                </module>
                                <module>
                                    <artifact>
                                        <groupId>commons-net</groupId>
                                        <artifactId>commons-net</artifactId>
                                    </artifact>
                                    <moduleInfo>
                                        <name>org.apache.commons.net</name>
                                        <exports>*;</exports>
                                    </moduleInfo>
                                </module>
                                <module>
                                    <artifact>
                                        <groupId>org.apache.commons</groupId>
                                        <artifactId>commons-compress</artifactId>
                                    </artifact>
                                    <moduleInfo>
                                        <name>org.apache.commons.compress</name>
                                        <exports>*;</exports>
                                    </moduleInfo>
                                </module>
                                <module>
                                    <artifact>
                                        <groupId>org.apache.pdfbox</groupId>
                                        <artifactId>pdfbox</artifactId>
                                    </artifact>
                                    <moduleInfoFile>src/main/moditect/org.apache.pdfbox/module-info.java</moduleInfoFile>
                                </module>
                                <module>
                                    <artifact>
                                        <groupId>org.apache.pdfbox</groupId>
                                        <artifactId>fontbox</artifactId>
                                    </artifact>
                                    <moduleInfoFile>src/main/moditect/org.apache.fontbox/module-info.java</moduleInfoFile>
                                </module>
                                <module>
                                    <artifact>
                                        <groupId>com.j2html</groupId>
                                        <artifactId>j2html</artifactId>
                                    </artifact>
                                    <moduleInfo>
                                        <name>com.j2html</name>
                                        <exports>*;</exports>
                                    </moduleInfo>
                                </module>
                                <module>
                                    <artifact>
                                        <groupId>com.github.spullara.mustache.java</groupId>
                                        <artifactId>compiler</artifactId>
                                    </artifact>
                                    <moduleInfo>
                                        <name>com.github.mustachejava</name>
                                        <exports>*;</exports>
                                    </moduleInfo>
                                </module>
                                <module>
                                    <artifact>
                                        <groupId>org.jsoup</groupId>
                                        <artifactId>jsoup</artifactId>
                                    </artifact>
                                    <moduleInfoFile>src/main/moditect/org.jsoup/module-info.java</moduleInfoFile>
                                </module>
                                <module>
                                    <artifact>
                                        <groupId>org.apache.httpcomponents.core5</groupId>
                                        <artifactId>httpcore5</artifactId>
                                    </artifact>
                                    <moduleInfo>
                                        <name>org.apache.httpcomponents.core5.httpcore5</name>
                                        <exports>*;</exports>
                                    </moduleInfo>
                                </module>
                                <module>
                                    <artifact>
                                        <groupId>org.apache.httpcomponents.core5</groupId>
                                        <artifactId>httpcore5-h2</artifactId>
                                    </artifact>
                                    <moduleInfo>
                                        <name>org.apache.httpcomponents.core5.httpcore5.h2</name>
                                        <exports>*;</exports>
                                    </moduleInfo>
                                </module>
                                <module>
                                    <artifact>
                                        <groupId>org.apache.httpcomponents.client5</groupId>
                                        <artifactId>httpclient5</artifactId>
                                    </artifact>
                                    <moduleInfo>
                                        <name>org.apache.httpcomponents.client5.httpclient5</name>
                                        <exports>*;</exports>
                                    </moduleInfo>
                                </module>
                                <module>
                                    <artifact>
                                        <groupId>org.yaml</groupId>
                                        <artifactId>snakeyaml</artifactId>
                                    </artifact>
                                    <moduleInfo>
                                        <name>org.yaml.snakeyaml</name>
                                        <exports>*;</exports>
                                    </moduleInfo>
                                </module>
                                <module>
                                    <artifact>
                                        <groupId>com.nhl.dflib</groupId>
                                        <artifactId>dflib</artifactId>
                                    </artifact>
                                    <moduleInfo>
                                        <name>dflib</name>
                                        <exports>*;</exports>
                                    </moduleInfo>
                                </module>
                                <module>
                                    <artifact>
                                        <groupId>com.nhl.dflib</groupId>
                                        <artifactId>dflib-csv</artifactId>
                                    </artifact>
                                    <moduleInfo>
                                        <name>dflib.csv</name>
                                        <exports>*;</exports>
                                    </moduleInfo>
                                </module>
                                <module>
                                    <artifact>
                                        <groupId>net.sf.expectit</groupId>
                                        <artifactId>expectit-core</artifactId>
                                    </artifact>
                                    <moduleInfo>
                                        <name>expectit.core</name>
                                        <exports>*;</exports>
                                    </moduleInfo>
                                </module>
                                <module>
                                    <artifact>
                                        <groupId>net.datafaker</groupId>
                                        <artifactId>datafaker</artifactId>
                                    </artifact>
                                    <moduleInfo>
                                        <name>datafaker</name>
                                        <exports>*;</exports>
                                    </moduleInfo>
                                </module>
                                <module>
                                    <artifact>
                                        <groupId>com.github.mifmif</groupId>
                                        <artifactId>generex</artifactId>
                                    </artifact>
                                    <moduleInfo>
                                        <name>generex</name>
                                        <exports>*;</exports>
                                    </moduleInfo>
                                </module>
                                <module>
                                    <artifact>
                                        <groupId>me.gosimple</groupId>
                                        <artifactId>nbvcxz</artifactId>
                                    </artifact>
                                    <moduleInfo>
                                        <name>me.gosimple.nbvcxz</name>
                                        <exports>*;</exports>
                                    </moduleInfo>
                                </module>
                                <module>
                                    <artifact>
                                        <groupId>io.kaitai</groupId>
                                        <artifactId>kaitai-struct-runtime</artifactId>
                                    </artifact>
                                    <moduleInfo>
                                        <name>kaitai.struct.runtime</name>
                                        <exports>*;</exports>
                                    </moduleInfo>
                                </module>
                            </modules>
                        </configuration>
                    </execution>
                    <execution>
                        <id>add-module-info/flyway</id>
                        <phase>package</phase>
                        <goals>
                            <goal>add-module-info</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${build.dependenciesDir}</outputDirectory>
                            <overwriteExistingFiles>true</overwriteExistingFiles>
                            <jdepsExtraArgs>
                                <arg>--ignore-missing-dependencies</arg>
                            </jdepsExtraArgs>
                            <modules>
                                <module>
                                    <artifact>
                                        <groupId>org.flywaydb</groupId>
                                        <artifactId>flyway-core</artifactId>
                                    </artifact>
                                    <moduleInfoFile>src/main/moditect/org.flywaydb.core/module-info.java</moduleInfoFile>
                                </module>
                            </modules>
                        </configuration>
                    </execution>
                    <execution>
                        <id>add-module-info/richtextfx</id>
                        <phase>package</phase>
                        <goals>
                            <goal>add-module-info</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${build.dependenciesDir}</outputDirectory>
                            <overwriteExistingFiles>true</overwriteExistingFiles>
                            <modules>
                                <module>
                                    <artifact>
                                        <groupId>org.reactfx</groupId>
                                        <artifactId>reactfx</artifactId>
                                    </artifact>
                                    <moduleInfoFile>src/main/moditect/org.reactfx/module-info.java</moduleInfoFile>
                                </module>
                                <module>
                                    <artifact>
                                        <groupId>org.fxmisc.flowless</groupId>
                                        <artifactId>flowless</artifactId>
                                    </artifact>
                                    <moduleInfoFile>src/main/moditect/org.fxmisc.flowless/module-info.java</moduleInfoFile>
                                </module>
                                <module>
                                    <artifact>
                                        <groupId>org.fxmisc.wellbehaved</groupId>
                                        <artifactId>wellbehavedfx</artifactId>
                                    </artifact>
                                    <moduleInfoFile>src/main/moditect/org.fxmisc.wellbehaved/module-info.java</moduleInfoFile>
                                </module>
                                <module>
                                    <artifact>
                                        <groupId>org.fxmisc.undo</groupId>
                                        <artifactId>undofx</artifactId>
                                    </artifact>
                                    <moduleInfoFile>src/main/moditect/org.fxmisc.undo/module-info.java</moduleInfoFile>
                                </module>
                                <module>
                                    <artifact>
                                        <groupId>org.fxmisc.richtext</groupId>
                                        <artifactId>richtextfx</artifactId>
                                    </artifact>
                                    <moduleInfoFile>src/main/moditect/org.fxmisc.richtext/module-info.java</moduleInfoFile>
                                </module>
                            </modules>
                        </configuration>
                    </execution>
                    <execution>
                        <id>add-module-info/sshj</id>
                        <phase>package</phase>
                        <goals>
                            <goal>add-module-info</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${build.dependenciesDir}</outputDirectory>
                            <overwriteExistingFiles>true</overwriteExistingFiles>
                            <jdepsExtraArgs>
                                <arg>--multi-release</arg>
                                <arg>9</arg>
                            </jdepsExtraArgs>
                            <modules>
                                <module>
                                    <artifact>
                                        <groupId>com.hierynomus</groupId>
                                        <artifactId>sshj</artifactId>
                                    </artifact>
                                    <moduleInfo>
                                        <name>com.hierynomus.sshj</name>
                                        <exports>*;</exports>
                                    </moduleInfo>
                                </module>
                                <module>
                                    <artifact>
                                        <groupId>com.hierynomus</groupId>
                                        <artifactId>asn-one</artifactId>
                                    </artifact>
                                    <moduleInfo>
                                        <name>com.hierynomus.asnone</name>
                                        <exports>*;</exports>
                                    </moduleInfo>
                                </module>
                                <module>
                                    <artifact>
                                        <groupId>com.jcraft</groupId>
                                        <artifactId>jzlib</artifactId>
                                    </artifact>
                                    <moduleInfo>
                                        <name>jzlib</name>
                                        <exports>*;</exports>
                                    </moduleInfo>
                                </module>
                                <module>
                                    <artifact>
                                        <groupId>net.i2p.crypto</groupId>
                                        <artifactId>eddsa</artifactId>
                                    </artifact>
                                    <moduleInfo>
                                        <name>net.i2p.crypto.eddsa</name>
                                        <exports>*;</exports>
                                    </moduleInfo>
                                </module>
                            </modules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.github.wiverson</groupId>
                <artifactId>jtoolprovider-plugin</artifactId>
                <executions>
                    <!-- create custom JRE image -->
                    <execution>
                        <id>create-runtime-image</id>
                        <phase>package</phase>
                        <goals>
                            <goal>java-tool</goal>
                        </goals>
                        <configuration>
                            <toolName>jlink</toolName>
                            <addModules>${build.jdkModules},${build.jfxModules}</addModules>
                            <modulePath>${build.platformModulesDir}</modulePath>
                            <output>${build.package.runtimeImageDir}</output>
                            <args>
                                <!-- print additional info -->
                                <arg>--verbose</arg>
                                <!-- compression is a trade-off between image size and startup time,
                                     the difference between 1 and 2 is ~10% in image size and 10-15 ms
                                     startup penalty
                                -->
                                <arg>--compress=1</arg>
                                <!-- strip everything optional from the runtime image -->
                                <arg>--include-locales=en</arg>
                                <arg>--no-header-files</arg>
                                <arg>--no-man-pages</arg>
                                <arg>--strip-debug</arg>
                                <arg>--strip-native-commands</arg>
                                <!-- JRE can be started in client or server mode. Those are different
                                     modules (libjvm) 15-25 MB each and jlink will include both by default.
                                -->
                                <!-- <arg>&#45;&#45;vm=client</arg>-->
                                <!-- exclude signing info from source JARs, required for JCE (BouncyCastle) -->
                                <arg>--ignore-signing-information</arg>
                            </args>
                        </configuration>
                    </execution>
                    <!-- create application image (includes JRE plus application JARs and resources) -->
                    <execution>
                        <id>create-app-image</id>
                        <phase>package</phase>
                        <goals>
                            <goal>java-tool</goal>
                        </goals>
                        <configuration>
                            <toolName>jpackage</toolName>
                            <removeDirectories>${build.package.tempDir}</removeDirectories>
                            <args>
                                <arg>@${build.package.scriptsDir}${file.separator}args-base.txt</arg>
                                <arg>@${build.package.scriptsDir}${file.separator}args-app-image.txt</arg>
                            </args>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- compress app image and place result to the release dir -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <id>assembly</id>
                        <phase>install</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${build.releaseDir}</outputDirectory>
                            <finalName>${build.artifactName}</finalName>
                            <attach>false</attach>
                            <appendAssemblyId>false</appendAssemblyId>
                            <tarLongFileMode>posix</tarLongFileMode>
                            <descriptors>
                                <descriptor>src/package-scripts/app-image.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>linux-active</id>
            <activation>
                <os>
                    <family>unix</family>
                </os>
            </activation>
            <properties>
                <app.icon>${project.build.directory}/app-icon.png</app.icon>
                <build.compressionAlg>tar.gz</build.compressionAlg>
            </properties>
        </profile>
        <profile>
            <id>windows-active</id>
            <activation>
                <os>
                    <family>windows</family>
                </os>
            </activation>
            <properties>
                <app.icon>${project.build.directory}\app-icon.ico</app.icon>
                <build.compressionAlg>zip</build.compressionAlg>
            </properties>
        </profile>
    </profiles>

    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>corf-base</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-jdk-platform-logging</artifactId>
        </dependency>

        <!-- Test -->
        <dependency>
            <groupId>corf</groupId>
            <artifactId>corf-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>
